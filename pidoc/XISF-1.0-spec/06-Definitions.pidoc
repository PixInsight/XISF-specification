
\section { Definitions } {

   The following subsections form a non-normative collection of important terms and concepts identified during the production of this document. They are included here for informational/reference purposes only.

   \definition {

      { Array }
      {
         A finite ordered sequence where any object can be accessed through an \e {array index}.
      }

      { Big-endian }
      {
         A data encoding where the bytes within a 16-bit or larger scalar are addressed from the most significant to the least significant as the byte address increases.
      }

      { Byte }
      {
         An 8-bit unsigned binary integer.
      }

      { Byte offset / byte position }
      {
         Number of bytes from the beginning of a file, or from the beginning of a given section of a file.
      }

      { Case-insensitive }
      {
         A text or string, such as the name or identifier of an object or data item, which does not distinguish between uppercase and lowercase letters. For example, the words "FooBar" and "foobar" are equivalent if considered as case-insensitive.
      }

      { Case-sensitive }
      {
         A text or string, such as the name or identifier of an object or data item, which distinguishes between uppercase and lowercase letters. For example, the words "thisIsFoo" and "thisisfoo" are different if considered as case-sensitive.
      }

      { Comma-separated list }
      {
         A string consisting of zero or more substrings separated by Unicode\ref unicode_standard comma characters (',', code point 44\sub{10} = 2C\sub{16}).
      }

      { Complex number }
      {
         A number that can be expressed in the form \im{a + bi}, where \im{a} and \im{b} are real numbers and \im{i} is the \e {imaginary unit}, which is defined by the equation \im{#: i^2 = -1 :#}. The components \im{a} and \im{b} of a complex number are called its \e real and \e imaginary parts or components.
      }

      { Contiguous sequence / contiguous objects }
      {
         A structure consisting of zero or more objects stored consecutively without any gaps.
      }

      { Decoder }
      {
         Any system, application, utility or device able to read and interpret the contents of an \lref xisf_unit {XISF unit} according to this specification.
      }

      { \lref distributed_xisf_unit {Distributed XISF unit} }
      {
         An XISF unit structured following the distributed storage model.
      }

      { Encoder }
      {
         Any system, application, utility or device able to generate \lref xisf_unit {XISF units} according to this specification.
      }

      { File }
      {
         A file is a finite ordered sequence of \e N 8-bit contiguous bytes, where \e N is the file length and bytes are numbered from 0 to \e{N}--1. The \e theoretical maximum file length is 2\sup{64}--1 = 18,446,744,073,709,551,615 bytes.
      }

      { File system }
      {
         A file system allows software applications to store and retrieve files on storage devices. Files are usually organized in a hierarchical structure of \e directories (also known as \e {folders}). Files and directories can be accessed through identifying \e {names}.
      }

      { Finite sequence }
      {
         A sequence containing a finite number of objects. The number of contained objects in a finite sequence is normally called its \e length.
      }

      { Heterogeneous structure }
      {
         A structure that can contain objects of different classes or data types.
      }

      { Homogeneous structure }
      {
         A structure that can only contain objects of the same class or data type.
      }

      { Little-endian }
      {
         A data encoding where the bytes within a 16-bit or larger scalar are addressed from the least significant to the most significant as the byte address increases.
      }

      { Matrix }
      {
         A homogeneous, finite set of scalars or complex numbers, structured as a two-dimensional array with a fixed number of rows and columns.
      }

      { \lref monolithic_xisf_unit {Monolithic XISF unit} }
      {
         An XISF unit structured following the monolithic storage model.
      }

      { Newline-separated list }
      {
         A string consisting of zero or more substrings separated by Unicode\ref unicode_standard line feed characters (code point 10\sub{10} = 0A\sub{16}).
      }

      { Object }
      {
         Any scalar or structure.
      }

      { Ordered sequence }
      {
         A sequence where the relative locations of its contained objects is a relevant property of the sequence itself.
      }

      { Scalar }
      {
         A single value without internal structure, such as an integer or a floating point number.
      }

      { Sequence }
      {
         A structure consisting of zero or more objects stored at consecutive locations.
      }

      { Sorted sequence }
      {
         An ordered sequence where the relative locations of its contained objects are functions of their values.
      }

      { Storage unit }
      {
         A file or a set of files storing an XISF unit or part of an XISF unit.
      }

      { String }
      {
         A homogeneous, finite ordered sequence of zero or more Unicode\ref unicode_standard code points represented as integer scalars.
      }

      { Structure }
      {
         A set of zero or more scalars or structures.
      }

      { Table }
      {
         A heterogeneous, finite set of objects, structured as a two-dimensional array with a fixed number of rows and columns. The structure of a table object is explicitly defined by describing the types and order of the objects contained in a table row.
      }

      { Vector }
      {
         A homogeneous, finite ordered sequence of zero or more scalars or complex numbers.
      }

      { \lref data_block {XISF data block} }
      {
         A file or a subset of a file storing data that can be accessed through an \lref xisf_unit {XISF unit}.
      }

      { \lref data_blocks_file {XISF data blocks file} }
      {
         A file, available as a local or remote resource, that allows indexed access to XISF data blocks.
      }

      { \lref xisf_header {XISF header} }
      {
         A valid XML 1.0\ref xml_1_0 document encoded in UTF-8\ref unicode_encoding_forms \ref unicode_encoding_schemes that describes and locates the entire contents of an \lref xisf_unit {XISF unit}.
      }

      { \lref xisf_header_file {XISF header file} }
      {
         An \lref xisf_header {XISF header} stored as a single file.
      }

      { \lref xisf_unit {XISF unit} }
      {
         A set of one or more files defining contents in the XISF format.
      }
   }
}
