
\subsection { \label data_block_checksum XISF Data Block Checksum } {

   XML elements serializing \lref data_block {XISF data blocks} can include a \c checksum attribute to enforce data integrity with a cryptographic hashing algorithm.

   If the XISF unit is digitally signed with an \lref xml_signature {XML signature}, then the \c checksum attribute \e must be included and correctly implemented for every data block not serialized directly in the XISF header, including all blocks with \lref attachment_data_block attachment, \lref url_data_block url, \lref absolute_path_data_block {absolute path} and \lref relative_path_data_block {relative path} block locations.

   Cryptographic checksums are \e optional for non-signed units, although their implementation is \e recommended for all XISF encoders as a user-selectable option available in all cases, irrespective of digital signatures.

   When a \c checksum attribute is defined for an XML element serializing a data block, an XISF decoder \e must verify it by computing a new digest from the serialized data and comparing it with the value of the corresponding \c checksum attribute. If the digests differ, a decoder should issue a warning or error message and give the user an option to stop loading the affected data block or the entire XISF unit, as appropriate. This validation process \e must always occur before making the data block available to the user, either directly or indirectly. Checksum verification \e may be implemented on an on-demand basis: only data blocks whose contents have to be loaded from the XISF unit need to be verified. For unattended operations such as batch processes, a decoder \e should \e not load an XISF unit for which a checksum verification fails.

   See also the section on \lref data_block_compression {compressed XISF data blocks} for important security considerations about \lref checksums_of_compressed_blocks {checksums and compression}.

   The syntax of the \c checksum attribute is as follows:

   \definition {

      \c { checksum="\e{algorithm}:\e{digest}" }
      {
         where \c\e algorithm is a cryptographic hashing algorithm, and \c\e digest is the corresponding message digest computed for the \e entire contents of the \lref data_block {XISF data block} being serialized.

         Message digests \e shall be encoded in Base16 using the lowercase hexadecimal digits 'a', 'b', 'c', 'd', 'e', and 'f'.

         Supported algorithms are:

         \table[caption,header,width:100\%] {
            { Cryptographic Hashing Algorithms }
            { { Algorithm } { \c checksum \c\e algorithm value } { Alternate \c\e algorithm value } }
            { { SHA-1\ref rfc_3174 } { \c sha-1 } { \c sha1 } }
            { { SHA-256\ref rfc_6234 } { \c sha-256 } { \c sha256 } }
            { { SHA-512\ref rfc_6234 } { \c sha-512 } { \c sha512 } }
            { { SHA3-256 (Keccak)\ref nist_sha3 \ref www_keccak } { \c sha3-256 } {} }
            { { SHA3-512 (Keccak)\ref nist_sha3 \ref www_keccak } { \c sha3-512 } {} }
         }

         SHA-1 is the \e recommended general-purpose hashing algorithm for use in XISF units, and \e must be supported by all encoders and decoders claiming support for data block checksums. The rest of algorithms are \e optional.

         Example:

         \code[lang:xml] { #:
<Image geometry="4096:4096:1" sampleFormat="Float32" bounds="0:1"
       location="attached:134217728:67108864"
       checksum="sha1:97b25345e3bd74bcd6613d24e3ecb47617a31d20" />
         :# }
      }
   }
}
