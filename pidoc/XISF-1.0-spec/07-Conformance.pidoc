
\section { Conformance } {

   Encoders and decoders implementing XISF can support a partial subset of the data objects and features described in this specification, since many of these objects and features are optional and/or have default values and behaviors. For many applications, some XISF objects may be unnecessary and some default settings may be suitable.

   To ensure minimum functionality and interoperability for all applications implementing XISF, we define a \e {baseline XISF conformance} level. Any encoder or decoder that claims conformance with this XISF specification \e shall comply with the requirements of a baseline encoder or decoder, as described in the following subsections.

   \subsection { Baseline XISF Encoder } {

      A baseline XISF encoder \e shall have \e {at least} the following abilities to generate \lref xisf_unit {XISF units}:

      \list {
         { Write \lref monolithic_xisf_file {monolithic XISF files}. }
         { Write a single \lref image_core_element \c Image core element to a monolithic XISF file. }
         { Write pixel data as an \lref data_block {XISF block} with attachment \lref data_block_location {block location}. }
         { Write pixel data in the planar \lref pixel_storage_models {pixel storage model}. }
         { Write pixel data in the UInt16 \lref sampleformat_image_attribute {pixel sample format}. }
         { Write pixel data encoded in the grayscale and RGB \lref image_color_spaces {color spaces}. }
      }
   }

   \subsection { Baseline XISF Decoder } {

      A baseline XISF decoder \e shall have at least the following abilities to read \lref xisf_unit {XISF units}:

      \list {
         { Read \lref monolithic_xisf_file {monolithic XISF files}. }
         { Read multiple \lref image_core_element \c Image core elements from a monolithic XISF file. }
         { Support all standard \lref data_block_compression {compression codecs} defined in this specification for decompression. }
         { Read pixel data from \lref data_block {XISF blocks} with inline, embedded and attachment \lref data_block_location {block locations}. }
         { Read pixel data in the planar and normal \lref pixel_storage_models {pixel storage models}. }
         { Read pixel data in the UInt8, UInt16 and Float32 \lref sampleformat_image_attribute {pixel sample formats}. }
         { Read pixel data encoded in the grayscale and RGB \lref image_color_spaces {color spaces}. }
      }
   }
}
