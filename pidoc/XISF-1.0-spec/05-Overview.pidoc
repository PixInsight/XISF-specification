
\section { Overview of XISF 1.0 Features } {

   The following is an informal, non-normative overview of features in the XISF version 1.0 specification---not all parts of the specification are described, and this overview is not part of the specification proper.

   \definition {

      { Two storage models }
      {
         \list[spaced] {
            { \e { Monolithic model }, where all image metadata, pixel data and image properties are stored in a single, self-contained file. }
            { \e { Distributed model }, where metadata are stored in a single header file, while pixel data and image properties are stored as separate files, including local and remote files. }
         }
      }

      { Relocatable distributed units }
      {
         An XISF unit is a set of files storing data and metadata in the XISF format, following one of the storage models described above. A distributed XISF unit can be built so that it can be moved or copied to any location in a local file system and across different machines. A monolithic XISF unit is a single file and thus relocatable.
      }

      { Multiple images, metadata and image properties }
      {
         An XISF unit can store an unlimited number of images with different geometries, color spaces, and associated metadata and properties.
      }

      { Multidimensional images }
      {
         XISF supports arbitrary image dimensions, including one-dimensional, two-dimensional and three-dimensional images, as well as images of higher dimensions such as tesseracts and other hypercubes.
      }

      { Multichannel images }
      {
         XISF supports an unlimited number of image hyperplanes (not to be confused with the dimensionality of the image), such as nominal color channels and alpha channels, for each stored image.
      }

      { Sequential and random access }
      {
         Uncompressed XISF images support sequential and random access to read or write individual pixel samples.
      }

      { Eight pixel sample data types }
      {
         XISF supports integer pixel samples stored as unsigned 8-bit, 16-bit, 32-bit and 64-bit integers, plus real and complex samples in 32-bit and 64-bit IEEE 754 floating point format.
      }

      { Colorimetrically defined color spaces }
      {
         XISF supports images represented in colorimetrically defined grayscale, RGB and CIE L*a*b* color spaces.
      }

      { RGB working spaces }
      {
         XISF can serialize the parameters of colorimetrically defined RGB working spaces associated with stored images.
      }

      { ICC color profiles }
      {
         XISF can embed standard ICC color profiles associated with stored images.
      }

      { Unambiguous floating point data ranges }
      {
         Floating point real and complex images can be stored using arbitrary values and ranges. However, an unambiguous specification of the numeric range to which floating point real image data is referred---that is, the black and white points of the image---is mandatory. This prevents any ambiguity in the interpretation of floating point image data and guarantees interoperability between different implementations and applications.
      }

      { Data compression }
      {
         The XISF specification supports data compression codecs, including lossless and lossy compression schemes. The deflate/zlib algorithm is the standard compression codec of XISF.
      }

      { Digital signatures }
      {
         The XISF specification supports signed files with standard X.509 certificates and XML signatures. Digital signatures protect both data integrity and authenticity.
      }

      { XML file headers }
      {
         XISF headers (in both the monolithic and distributed models) are plain text in standard XML 1.0 format encoded as UTF-8.
      }

      { Full Unicode support }
      {
         Image metadata and textual properties fully support Unicode.
      }

      { Properties }
      {
         An XISF property is a data block accessible through a unique identifier (name-value pairs). Properties can be associated with images, with the whole XISF unit, or be serialized as standalone elements. XISF properties are typed objects of scalar, complex, string, time point, vector and matrix types.
      }

      { FITS format compatibility }
      {
         FITS header keywords can be stored in XISF units and retrieved as if the reader were working with actual FITS files.
      }
   }
}
